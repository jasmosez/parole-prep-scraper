# Specify logs bucket
options:
  logging: CLOUD_LOGGING_ONLY  # This is the simplest solution

steps:
  # Create env.yaml combining config and secrets
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Copy non-sensitive vars from config.yaml (includes ENV)
        cat config.yaml > .env.yaml

        # Add sensitive vars from Secret Manager (production)
        echo "AIRTABLE_API_KEY=\"$(gcloud secrets versions access latest --secret=AIRTABLE_API_KEY)\"" >> .env.yaml
        echo "AIRTABLE_BASE_ID=\"$(gcloud secrets versions access latest --secret=AIRTABLE_BASE_ID)\"" >> .env.yaml
        echo "AIRTABLE_TABLE_ID=\"$(gcloud secrets versions access latest --secret=AIRTABLE_TABLE_ID)\"" >> .env.yaml
        echo "AIRTABLE_VIEW=\"$(gcloud secrets versions access latest --secret=AIRTABLE_VIEW)\"" >> .env.yaml

        # Add sensitive vars from Secret Manager (staging)
        echo "STAGING_AIRTABLE_API_KEY=\"$(gcloud secrets versions access latest --secret=STAGING_AIRTABLE_API_KEY)\"" >> .env.yaml
        echo "STAGING_AIRTABLE_BASE_ID=\"$(gcloud secrets versions access latest --secret=STAGING_AIRTABLE_BASE_ID)\"" >> .env.yaml
        echo "STAGING_AIRTABLE_TABLE_ID=\"$(gcloud secrets versions access latest --secret=STAGING_AIRTABLE_TABLE_ID)\"" >> .env.yaml
        echo "STAGING_AIRTABLE_VIEW=\"$(gcloud secrets versions access latest --secret=STAGING_AIRTABLE_VIEW)\"" >> .env.yaml

  # Install dependencies
  - name: 'node:18'
    entrypoint: npm
    args: ['install']

  # Deploy to Cloud Functions
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud functions deploy runSync \
          --runtime nodejs18 \
          --trigger-http \
          --region us-east1 \
          --memory 256MB \
          --timeout 540s \
          --env-vars-file .env.yaml

# Optional: Specify a timeout
timeout: '1800s' 